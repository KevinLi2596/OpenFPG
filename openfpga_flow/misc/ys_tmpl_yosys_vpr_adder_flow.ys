${READ_VERILOG_FILE}
# read_verilog -lib cells_sim.v
hierarchy -check -top ${TOP_MODULE}
proc

# flatten
# tribuf -logic
# deminout

opt_expr
opt_clean
check
opt
wreduce
peepopt
opt_clean
share
# techmap -map +/cmp2lut.v -D LUT_WIDTH=4
opt_expr
opt_clean
# ice40_dsp    (if -dsp)
alumacc
opt
fsm
opt -fast
memory -nomap
opt_clean

### BRAM
# memory_bram -rules +/ice40/brams.txt
# techmap -map +/ice40/brams_map.v
# ice40_braminit

### Map
# opt -fast -mux_undef -undriven -fine
# memory_map
# opt -undriven -fine

### map_gates
# techmap -map +/techmap.v -map +/ice40/arith_map.v
techmap -map ${YOSYS_ADDER_MAP_VERILOG}
opt
# abc -dff    (only if -retime)
# ice40_opt

### map_ffs
# dffsr2dff
# dff2dffe -direct-match $_DFF_*
# techmap -D NO_LUT -map +/ice40/cells_map.v
# opt_expr -mux_undef
# simplemap
# ice40_ffinit
# ice40_ffssr
# ice40_opt -full
stat
### map_luts
abc -lut ${LUT_SIZE}
# abc          (only if -abc2)
# ice40_opt    (only if -abc2)
# techmap -map +/ice40/latches_map.v
# simplemap                                   (only if -noabc)
# techmap -map +/gate2lut.v -D LUT_WIDTH=4    (only if -noabc)
# abc -dress -lut 4    (skip if -noabc)
# clean
# ice40_unlut                                (only if -relut)
# opt_lut -dlogic SB_CARRY:I0=1:I1=2:CI=3    (only if -relut)

### map_cells
# techmap -map +/ice40/cells_map.v    (with -D NO_LUT in vpr mode)
# clean

### check
# hierarchy -check
# stat
# check -noinit
### blif
opt_clean -purge
write_blif -conn -param ${OUTPUT_BLIF}
